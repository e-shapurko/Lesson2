#define BOOST_TEST_MODULE test_ip_filter

#include "ip_filter.h"

#include <boost/test/unit_test.hpp>

namespace plug_nsp {
  inline bool plug() {
    return true;
  }
}

VV_INT test_ip_list(
{{1},{29},{168},{152}},
{{23},{240},{215},{189}},
{{24},{210},{239},{177}},
{{46},{70},{113},{73}},
{{46},{182},{19},{219}},
{{49},{74},{228},{23}},
{{50},{254},{198},{161}},
{{62},{205},{202},{214}},
{{65},{208},{151},{112}},
{{67},{232},{81},{208}},
{{68},{45},{152},{8}},
{{69},{160},{110},{157}},
{{73},{21},{168},{251}},
{{79},{180},{73},{190}},
{{81},{198},{169},{232}},
{{85},{254},{10},{197}},
{{89},{177},{68},{136}},
{{89},{177},{68},{136}},
{{91},{15},{15},{33}},
{{94},{240},{192},{2}},
{{95},{181},{177},{197}},
{{95},{181},{177},{197}},
{{98},{219},{109},{151}},
{{103},{62},{147},{2}},
{{107},{185},{11},{105}},
{{110},{152},{103},{161}},
{{113},{162},{145},{156}},
{{113},{190},{198},{73}},
{{114},{221},{179},{117}},
{{119},{42},{115},{97}},
{{123},{133},{114},{213}},
{{124},{224},{214},{76}},
{{149},{107},{0},{27}},
{{157},{39},{22},{224}},
{{166},{88},{193},{116}},
{{179},{210},{145},{4}},
{{182},{186},{69},{18}},
{{183},{88},{197},{193}},
{{183},{198},{27},{25}},
{{185},{69},{186},{168}},
{{185},{89},{100},{47}},
{{185},{89},{100},{249}},
{{185},{182},{81},{131}},
{{187},{189},{75},{118}},
{{188},{68},{0},{38}},
{{188},{72},{96},{184}},
{{188},{166},{87},{191}},
{{188},{212},{33},{157}},
{{194},{106},{108},{214}},
{{219},{102},{120},{135}}
)



BOOST_AUTO_TEST_SUITE(ip_filter_test_suite)

BOOST_AUTO_TEST_CASE(ip_filter_test_star_find_ranges) // test *
{
	V_STR test_ip_find("*","177","*","*");
	VV_INT ranges;
	find_ranges(test_ip_list, test_ip_find, ranges, 0);
    BOOST_CHECK(ranges.size() == 2);
}

BOOST_AUTO_TEST_SUITE_END()
